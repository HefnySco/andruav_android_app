/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE ASLCTRL_DEBUG PACKING
package com.MAVLink.ASLUAV;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;
import com.MAVLink.Messages.Description;

/**
 * ASL-fixed-wing controller debug data
 */
public class msg_aslctrl_debug extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_ASLCTRL_DEBUG = 8005;
    public static final int MAVLINK_MSG_LENGTH = 38;
    private static final long serialVersionUID = MAVLINK_MSG_ID_ASLCTRL_DEBUG;

    
    /**
     *  Debug data
     */
    @Description(" Debug data")
    @Units("")
    public long i32_1;
    
    /**
     *  Debug data 
     */
    @Description(" Debug data ")
    @Units("")
    public float f_1;
    
    /**
     *  Debug data
     */
    @Description(" Debug data")
    @Units("")
    public float f_2;
    
    /**
     *  Debug data
     */
    @Description(" Debug data")
    @Units("")
    public float f_3;
    
    /**
     *  Debug data
     */
    @Description(" Debug data")
    @Units("")
    public float f_4;
    
    /**
     *  Debug data
     */
    @Description(" Debug data")
    @Units("")
    public float f_5;
    
    /**
     *  Debug data
     */
    @Description(" Debug data")
    @Units("")
    public float f_6;
    
    /**
     *  Debug data
     */
    @Description(" Debug data")
    @Units("")
    public float f_7;
    
    /**
     *  Debug data
     */
    @Description(" Debug data")
    @Units("")
    public float f_8;
    
    /**
     *  Debug data
     */
    @Description(" Debug data")
    @Units("")
    public short i8_1;
    
    /**
     *  Debug data
     */
    @Description(" Debug data")
    @Units("")
    public short i8_2;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_ASLCTRL_DEBUG;

        packet.payload.putUnsignedInt(i32_1);
        packet.payload.putFloat(f_1);
        packet.payload.putFloat(f_2);
        packet.payload.putFloat(f_3);
        packet.payload.putFloat(f_4);
        packet.payload.putFloat(f_5);
        packet.payload.putFloat(f_6);
        packet.payload.putFloat(f_7);
        packet.payload.putFloat(f_8);
        packet.payload.putUnsignedByte(i8_1);
        packet.payload.putUnsignedByte(i8_2);
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a aslctrl_debug message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.i32_1 = payload.getUnsignedInt();
        this.f_1 = payload.getFloat();
        this.f_2 = payload.getFloat();
        this.f_3 = payload.getFloat();
        this.f_4 = payload.getFloat();
        this.f_5 = payload.getFloat();
        this.f_6 = payload.getFloat();
        this.f_7 = payload.getFloat();
        this.f_8 = payload.getFloat();
        this.i8_1 = payload.getUnsignedByte();
        this.i8_2 = payload.getUnsignedByte();
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_aslctrl_debug() {
        this.msgid = MAVLINK_MSG_ID_ASLCTRL_DEBUG;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_aslctrl_debug( long i32_1, float f_1, float f_2, float f_3, float f_4, float f_5, float f_6, float f_7, float f_8, short i8_1, short i8_2) {
        this.msgid = MAVLINK_MSG_ID_ASLCTRL_DEBUG;

        this.i32_1 = i32_1;
        this.f_1 = f_1;
        this.f_2 = f_2;
        this.f_3 = f_3;
        this.f_4 = f_4;
        this.f_5 = f_5;
        this.f_6 = f_6;
        this.f_7 = f_7;
        this.f_8 = f_8;
        this.i8_1 = i8_1;
        this.i8_2 = i8_2;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_aslctrl_debug( long i32_1, float f_1, float f_2, float f_3, float f_4, float f_5, float f_6, float f_7, float f_8, short i8_1, short i8_2, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_ASLCTRL_DEBUG;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.i32_1 = i32_1;
        this.f_1 = f_1;
        this.f_2 = f_2;
        this.f_3 = f_3;
        this.f_4 = f_4;
        this.f_5 = f_5;
        this.f_6 = f_6;
        this.f_7 = f_7;
        this.f_8 = f_8;
        this.i8_1 = i8_1;
        this.i8_2 = i8_2;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_aslctrl_debug(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_ASLCTRL_DEBUG;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

                          
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_ASLCTRL_DEBUG - sysid:"+sysid+" compid:"+compid+" i32_1:"+i32_1+" f_1:"+f_1+" f_2:"+f_2+" f_3:"+f_3+" f_4:"+f_4+" f_5:"+f_5+" f_6:"+f_6+" f_7:"+f_7+" f_8:"+f_8+" i8_1:"+i8_1+" i8_2:"+i8_2+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_ASLCTRL_DEBUG";
    }
}
        