/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE COMMAND_INT_STAMPED PACKING
package com.MAVLink.ASLUAV;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;
import com.MAVLink.Messages.Description;

/**
 * Message encoding a command with parameters as scaled integers and additional metadata. Scaling depends on the actual command value.
 */
public class msg_command_int_stamped extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_COMMAND_INT_STAMPED = 223;
    public static final int MAVLINK_MSG_LENGTH = 47;
    private static final long serialVersionUID = MAVLINK_MSG_ID_COMMAND_INT_STAMPED;

    
    /**
     * Microseconds elapsed since vehicle boot
     */
    @Description("Microseconds elapsed since vehicle boot")
    @Units("")
    public long vehicle_timestamp;
    
    /**
     * UTC time, seconds elapsed since 01.01.1970
     */
    @Description("UTC time, seconds elapsed since 01.01.1970")
    @Units("")
    public long utc_time;
    
    /**
     * PARAM1, see MAV_CMD enum
     */
    @Description("PARAM1, see MAV_CMD enum")
    @Units("")
    public float param1;
    
    /**
     * PARAM2, see MAV_CMD enum
     */
    @Description("PARAM2, see MAV_CMD enum")
    @Units("")
    public float param2;
    
    /**
     * PARAM3, see MAV_CMD enum
     */
    @Description("PARAM3, see MAV_CMD enum")
    @Units("")
    public float param3;
    
    /**
     * PARAM4, see MAV_CMD enum
     */
    @Description("PARAM4, see MAV_CMD enum")
    @Units("")
    public float param4;
    
    /**
     * PARAM5 / local: x position in meters * 1e4, global: latitude in degrees * 10^7
     */
    @Description("PARAM5 / local: x position in meters * 1e4, global: latitude in degrees * 10^7")
    @Units("")
    public int x;
    
    /**
     * PARAM6 / local: y position in meters * 1e4, global: longitude in degrees * 10^7
     */
    @Description("PARAM6 / local: y position in meters * 1e4, global: longitude in degrees * 10^7")
    @Units("")
    public int y;
    
    /**
     * PARAM7 / z position: global: altitude in meters (MSL, WGS84, AGL or relative to home - depending on frame).
     */
    @Description("PARAM7 / z position: global: altitude in meters (MSL, WGS84, AGL or relative to home - depending on frame).")
    @Units("")
    public float z;
    
    /**
     * The scheduled action for the mission item, as defined by MAV_CMD enum
     */
    @Description("The scheduled action for the mission item, as defined by MAV_CMD enum")
    @Units("")
    public int command;
    
    /**
     * System ID
     */
    @Description("System ID")
    @Units("")
    public short target_system;
    
    /**
     * Component ID
     */
    @Description("Component ID")
    @Units("")
    public short target_component;
    
    /**
     * The coordinate system of the COMMAND, as defined by MAV_FRAME enum
     */
    @Description("The coordinate system of the COMMAND, as defined by MAV_FRAME enum")
    @Units("")
    public short frame;
    
    /**
     * false:0, true:1
     */
    @Description("false:0, true:1")
    @Units("")
    public short current;
    
    /**
     * autocontinue to next wp
     */
    @Description("autocontinue to next wp")
    @Units("")
    public short autocontinue;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_COMMAND_INT_STAMPED;

        packet.payload.putUnsignedLong(vehicle_timestamp);
        packet.payload.putUnsignedInt(utc_time);
        packet.payload.putFloat(param1);
        packet.payload.putFloat(param2);
        packet.payload.putFloat(param3);
        packet.payload.putFloat(param4);
        packet.payload.putInt(x);
        packet.payload.putInt(y);
        packet.payload.putFloat(z);
        packet.payload.putUnsignedShort(command);
        packet.payload.putUnsignedByte(target_system);
        packet.payload.putUnsignedByte(target_component);
        packet.payload.putUnsignedByte(frame);
        packet.payload.putUnsignedByte(current);
        packet.payload.putUnsignedByte(autocontinue);
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a command_int_stamped message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.vehicle_timestamp = payload.getUnsignedLong();
        this.utc_time = payload.getUnsignedInt();
        this.param1 = payload.getFloat();
        this.param2 = payload.getFloat();
        this.param3 = payload.getFloat();
        this.param4 = payload.getFloat();
        this.x = payload.getInt();
        this.y = payload.getInt();
        this.z = payload.getFloat();
        this.command = payload.getUnsignedShort();
        this.target_system = payload.getUnsignedByte();
        this.target_component = payload.getUnsignedByte();
        this.frame = payload.getUnsignedByte();
        this.current = payload.getUnsignedByte();
        this.autocontinue = payload.getUnsignedByte();
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_command_int_stamped() {
        this.msgid = MAVLINK_MSG_ID_COMMAND_INT_STAMPED;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_command_int_stamped( long vehicle_timestamp, long utc_time, float param1, float param2, float param3, float param4, int x, int y, float z, int command, short target_system, short target_component, short frame, short current, short autocontinue) {
        this.msgid = MAVLINK_MSG_ID_COMMAND_INT_STAMPED;

        this.vehicle_timestamp = vehicle_timestamp;
        this.utc_time = utc_time;
        this.param1 = param1;
        this.param2 = param2;
        this.param3 = param3;
        this.param4 = param4;
        this.x = x;
        this.y = y;
        this.z = z;
        this.command = command;
        this.target_system = target_system;
        this.target_component = target_component;
        this.frame = frame;
        this.current = current;
        this.autocontinue = autocontinue;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_command_int_stamped( long vehicle_timestamp, long utc_time, float param1, float param2, float param3, float param4, int x, int y, float z, int command, short target_system, short target_component, short frame, short current, short autocontinue, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_COMMAND_INT_STAMPED;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.vehicle_timestamp = vehicle_timestamp;
        this.utc_time = utc_time;
        this.param1 = param1;
        this.param2 = param2;
        this.param3 = param3;
        this.param4 = param4;
        this.x = x;
        this.y = y;
        this.z = z;
        this.command = command;
        this.target_system = target_system;
        this.target_component = target_component;
        this.frame = frame;
        this.current = current;
        this.autocontinue = autocontinue;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_command_int_stamped(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_COMMAND_INT_STAMPED;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

                                  
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_COMMAND_INT_STAMPED - sysid:"+sysid+" compid:"+compid+" vehicle_timestamp:"+vehicle_timestamp+" utc_time:"+utc_time+" param1:"+param1+" param2:"+param2+" param3:"+param3+" param4:"+param4+" x:"+x+" y:"+y+" z:"+z+" command:"+command+" target_system:"+target_system+" target_component:"+target_component+" frame:"+frame+" current:"+current+" autocontinue:"+autocontinue+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_COMMAND_INT_STAMPED";
    }
}
        