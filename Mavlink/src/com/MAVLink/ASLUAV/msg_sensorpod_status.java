/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE SENSORPOD_STATUS PACKING
package com.MAVLink.ASLUAV;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;
import com.MAVLink.Messages.Description;

/**
 * Monitoring of sensorpod status
 */
public class msg_sensorpod_status extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_SENSORPOD_STATUS = 8012;
    public static final int MAVLINK_MSG_LENGTH = 16;
    private static final long serialVersionUID = MAVLINK_MSG_ID_SENSORPOD_STATUS;

    
    /**
     * Timestamp in linuxtime (since 1.1.1970)
     */
    @Description("Timestamp in linuxtime (since 1.1.1970)")
    @Units("ms")
    public long timestamp;
    
    /**
     * Free space available in recordings directory in [Gb] * 1e2
     */
    @Description("Free space available in recordings directory in [Gb] * 1e2")
    @Units("")
    public int free_space;
    
    /**
     * Rate of ROS topic 1
     */
    @Description("Rate of ROS topic 1")
    @Units("")
    public short visensor_rate_1;
    
    /**
     * Rate of ROS topic 2
     */
    @Description("Rate of ROS topic 2")
    @Units("")
    public short visensor_rate_2;
    
    /**
     * Rate of ROS topic 3
     */
    @Description("Rate of ROS topic 3")
    @Units("")
    public short visensor_rate_3;
    
    /**
     * Rate of ROS topic 4
     */
    @Description("Rate of ROS topic 4")
    @Units("")
    public short visensor_rate_4;
    
    /**
     * Number of recording nodes
     */
    @Description("Number of recording nodes")
    @Units("")
    public short recording_nodes_count;
    
    /**
     * Temperature of sensorpod CPU in
     */
    @Description("Temperature of sensorpod CPU in")
    @Units("degC")
    public short cpu_temp;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_SENSORPOD_STATUS;

        packet.payload.putUnsignedLong(timestamp);
        packet.payload.putUnsignedShort(free_space);
        packet.payload.putUnsignedByte(visensor_rate_1);
        packet.payload.putUnsignedByte(visensor_rate_2);
        packet.payload.putUnsignedByte(visensor_rate_3);
        packet.payload.putUnsignedByte(visensor_rate_4);
        packet.payload.putUnsignedByte(recording_nodes_count);
        packet.payload.putUnsignedByte(cpu_temp);
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a sensorpod_status message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.timestamp = payload.getUnsignedLong();
        this.free_space = payload.getUnsignedShort();
        this.visensor_rate_1 = payload.getUnsignedByte();
        this.visensor_rate_2 = payload.getUnsignedByte();
        this.visensor_rate_3 = payload.getUnsignedByte();
        this.visensor_rate_4 = payload.getUnsignedByte();
        this.recording_nodes_count = payload.getUnsignedByte();
        this.cpu_temp = payload.getUnsignedByte();
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_sensorpod_status() {
        this.msgid = MAVLINK_MSG_ID_SENSORPOD_STATUS;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_sensorpod_status( long timestamp, int free_space, short visensor_rate_1, short visensor_rate_2, short visensor_rate_3, short visensor_rate_4, short recording_nodes_count, short cpu_temp) {
        this.msgid = MAVLINK_MSG_ID_SENSORPOD_STATUS;

        this.timestamp = timestamp;
        this.free_space = free_space;
        this.visensor_rate_1 = visensor_rate_1;
        this.visensor_rate_2 = visensor_rate_2;
        this.visensor_rate_3 = visensor_rate_3;
        this.visensor_rate_4 = visensor_rate_4;
        this.recording_nodes_count = recording_nodes_count;
        this.cpu_temp = cpu_temp;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_sensorpod_status( long timestamp, int free_space, short visensor_rate_1, short visensor_rate_2, short visensor_rate_3, short visensor_rate_4, short recording_nodes_count, short cpu_temp, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_SENSORPOD_STATUS;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.timestamp = timestamp;
        this.free_space = free_space;
        this.visensor_rate_1 = visensor_rate_1;
        this.visensor_rate_2 = visensor_rate_2;
        this.visensor_rate_3 = visensor_rate_3;
        this.visensor_rate_4 = visensor_rate_4;
        this.recording_nodes_count = recording_nodes_count;
        this.cpu_temp = cpu_temp;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_sensorpod_status(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_SENSORPOD_STATUS;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

                    
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_SENSORPOD_STATUS - sysid:"+sysid+" compid:"+compid+" timestamp:"+timestamp+" free_space:"+free_space+" visensor_rate_1:"+visensor_rate_1+" visensor_rate_2:"+visensor_rate_2+" visensor_rate_3:"+visensor_rate_3+" visensor_rate_4:"+visensor_rate_4+" recording_nodes_count:"+recording_nodes_count+" cpu_temp:"+cpu_temp+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_SENSORPOD_STATUS";
    }
}
        