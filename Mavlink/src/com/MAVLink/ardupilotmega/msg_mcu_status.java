/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE MCU_STATUS PACKING
package com.MAVLink.ardupilotmega;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;
import com.MAVLink.Messages.Description;

/**
 * The MCU status, giving MCU temperature and voltage. The min and max voltages are to allow for detecting power supply instability.
 */
public class msg_mcu_status extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_MCU_STATUS = 11039;
    public static final int MAVLINK_MSG_LENGTH = 9;
    private static final long serialVersionUID = MAVLINK_MSG_ID_MCU_STATUS;

    
    /**
     * MCU Internal temperature
     */
    @Description("MCU Internal temperature")
    @Units("cdegC")
    public short MCU_temperature;
    
    /**
     * MCU voltage
     */
    @Description("MCU voltage")
    @Units("mV")
    public int MCU_voltage;
    
    /**
     * MCU voltage minimum
     */
    @Description("MCU voltage minimum")
    @Units("mV")
    public int MCU_voltage_min;
    
    /**
     * MCU voltage maximum
     */
    @Description("MCU voltage maximum")
    @Units("mV")
    public int MCU_voltage_max;
    
    /**
     * MCU instance
     */
    @Description("MCU instance")
    @Units("")
    public short id;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_MCU_STATUS;

        packet.payload.putShort(MCU_temperature);
        packet.payload.putUnsignedShort(MCU_voltage);
        packet.payload.putUnsignedShort(MCU_voltage_min);
        packet.payload.putUnsignedShort(MCU_voltage_max);
        packet.payload.putUnsignedByte(id);
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a mcu_status message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.MCU_temperature = payload.getShort();
        this.MCU_voltage = payload.getUnsignedShort();
        this.MCU_voltage_min = payload.getUnsignedShort();
        this.MCU_voltage_max = payload.getUnsignedShort();
        this.id = payload.getUnsignedByte();
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_mcu_status() {
        this.msgid = MAVLINK_MSG_ID_MCU_STATUS;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_mcu_status( short MCU_temperature, int MCU_voltage, int MCU_voltage_min, int MCU_voltage_max, short id) {
        this.msgid = MAVLINK_MSG_ID_MCU_STATUS;

        this.MCU_temperature = MCU_temperature;
        this.MCU_voltage = MCU_voltage;
        this.MCU_voltage_min = MCU_voltage_min;
        this.MCU_voltage_max = MCU_voltage_max;
        this.id = id;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_mcu_status( short MCU_temperature, int MCU_voltage, int MCU_voltage_min, int MCU_voltage_max, short id, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_MCU_STATUS;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.MCU_temperature = MCU_temperature;
        this.MCU_voltage = MCU_voltage;
        this.MCU_voltage_min = MCU_voltage_min;
        this.MCU_voltage_max = MCU_voltage_max;
        this.id = id;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_mcu_status(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_MCU_STATUS;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

              
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_MCU_STATUS - sysid:"+sysid+" compid:"+compid+" MCU_temperature:"+MCU_temperature+" MCU_voltage:"+MCU_voltage+" MCU_voltage_min:"+MCU_voltage_min+" MCU_voltage_max:"+MCU_voltage_max+" id:"+id+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_MCU_STATUS";
    }
}
        