/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE SECURE_COMMAND_REPLY PACKING
package com.MAVLink.ardupilotmega;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;
import com.MAVLink.Messages.Description;

/**
 * Reply from secure command.
 */
public class msg_secure_command_reply extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_SECURE_COMMAND_REPLY = 11005;
    public static final int MAVLINK_MSG_LENGTH = 230;
    private static final long serialVersionUID = MAVLINK_MSG_ID_SECURE_COMMAND_REPLY;

    
    /**
     * Sequence ID from request.
     */
    @Description("Sequence ID from request.")
    @Units("")
    public long sequence;
    
    /**
     * Operation that was requested.
     */
    @Description("Operation that was requested.")
    @Units("")
    public long operation;
    
    /**
     * Result of command.
     */
    @Description("Result of command.")
    @Units("")
    public short result;
    
    /**
     * Data length.
     */
    @Description("Data length.")
    @Units("")
    public short data_length;
    
    /**
     * Reply data.
     */
    @Description("Reply data.")
    @Units("")
    public short data[] = new short[220];
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_SECURE_COMMAND_REPLY;

        packet.payload.putUnsignedInt(sequence);
        packet.payload.putUnsignedInt(operation);
        packet.payload.putUnsignedByte(result);
        packet.payload.putUnsignedByte(data_length);
        
        for (int i = 0; i < data.length; i++) {
            packet.payload.putUnsignedByte(data[i]);
        }
                    
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a secure_command_reply message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.sequence = payload.getUnsignedInt();
        this.operation = payload.getUnsignedInt();
        this.result = payload.getUnsignedByte();
        this.data_length = payload.getUnsignedByte();
        
        for (int i = 0; i < this.data.length; i++) {
            this.data[i] = payload.getUnsignedByte();
        }
                
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_secure_command_reply() {
        this.msgid = MAVLINK_MSG_ID_SECURE_COMMAND_REPLY;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_secure_command_reply( long sequence, long operation, short result, short data_length, short[] data) {
        this.msgid = MAVLINK_MSG_ID_SECURE_COMMAND_REPLY;

        this.sequence = sequence;
        this.operation = operation;
        this.result = result;
        this.data_length = data_length;
        this.data = data;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_secure_command_reply( long sequence, long operation, short result, short data_length, short[] data, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_SECURE_COMMAND_REPLY;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.sequence = sequence;
        this.operation = operation;
        this.result = result;
        this.data_length = data_length;
        this.data = data;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_secure_command_reply(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_SECURE_COMMAND_REPLY;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

              
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_SECURE_COMMAND_REPLY - sysid:"+sysid+" compid:"+compid+" sequence:"+sequence+" operation:"+operation+" result:"+result+" data_length:"+data_length+" data:"+data+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_SECURE_COMMAND_REPLY";
    }
}
        