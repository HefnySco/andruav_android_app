/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE SECURE_COMMAND PACKING
package com.MAVLink.ardupilotmega;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;
import com.MAVLink.Messages.Description;

/**
 * Send a secure command. Data should be signed with a private key corresponding with a public key known to the recipient. Signature should be over the concatenation of the sequence number (little-endian format), the operation (little-endian format) the data and the session key. For SECURE_COMMAND_GET_SESSION_KEY the session key should be zero length. The data array consists of the data followed by the signature. The sum of the data_length and the sig_length cannot be more than 220. The format of the data is command specific.
 */
public class msg_secure_command extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_SECURE_COMMAND = 11004;
    public static final int MAVLINK_MSG_LENGTH = 232;
    private static final long serialVersionUID = MAVLINK_MSG_ID_SECURE_COMMAND;

    
    /**
     * Sequence ID for tagging reply.
     */
    @Description("Sequence ID for tagging reply.")
    @Units("")
    public long sequence;
    
    /**
     * Operation being requested.
     */
    @Description("Operation being requested.")
    @Units("")
    public long operation;
    
    /**
     * System ID.
     */
    @Description("System ID.")
    @Units("")
    public short target_system;
    
    /**
     * Component ID.
     */
    @Description("Component ID.")
    @Units("")
    public short target_component;
    
    /**
     * Data length.
     */
    @Description("Data length.")
    @Units("")
    public short data_length;
    
    /**
     * Signature length.
     */
    @Description("Signature length.")
    @Units("")
    public short sig_length;
    
    /**
     * Signed data.
     */
    @Description("Signed data.")
    @Units("")
    public short data[] = new short[220];
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_SECURE_COMMAND;

        packet.payload.putUnsignedInt(sequence);
        packet.payload.putUnsignedInt(operation);
        packet.payload.putUnsignedByte(target_system);
        packet.payload.putUnsignedByte(target_component);
        packet.payload.putUnsignedByte(data_length);
        packet.payload.putUnsignedByte(sig_length);
        
        for (int i = 0; i < data.length; i++) {
            packet.payload.putUnsignedByte(data[i]);
        }
                    
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a secure_command message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.sequence = payload.getUnsignedInt();
        this.operation = payload.getUnsignedInt();
        this.target_system = payload.getUnsignedByte();
        this.target_component = payload.getUnsignedByte();
        this.data_length = payload.getUnsignedByte();
        this.sig_length = payload.getUnsignedByte();
        
        for (int i = 0; i < this.data.length; i++) {
            this.data[i] = payload.getUnsignedByte();
        }
                
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_secure_command() {
        this.msgid = MAVLINK_MSG_ID_SECURE_COMMAND;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_secure_command( long sequence, long operation, short target_system, short target_component, short data_length, short sig_length, short[] data) {
        this.msgid = MAVLINK_MSG_ID_SECURE_COMMAND;

        this.sequence = sequence;
        this.operation = operation;
        this.target_system = target_system;
        this.target_component = target_component;
        this.data_length = data_length;
        this.sig_length = sig_length;
        this.data = data;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_secure_command( long sequence, long operation, short target_system, short target_component, short data_length, short sig_length, short[] data, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_SECURE_COMMAND;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.sequence = sequence;
        this.operation = operation;
        this.target_system = target_system;
        this.target_component = target_component;
        this.data_length = data_length;
        this.sig_length = sig_length;
        this.data = data;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_secure_command(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_SECURE_COMMAND;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

                  
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_SECURE_COMMAND - sysid:"+sysid+" compid:"+compid+" sequence:"+sequence+" operation:"+operation+" target_system:"+target_system+" target_component:"+target_component+" data_length:"+data_length+" sig_length:"+sig_length+" data:"+data+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_SECURE_COMMAND";
    }
}
        