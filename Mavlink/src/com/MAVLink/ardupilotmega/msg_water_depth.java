/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE WATER_DEPTH PACKING
package com.MAVLink.ardupilotmega;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;
import com.MAVLink.Messages.Description;

/**
 * Water depth
 */
public class msg_water_depth extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_WATER_DEPTH = 11038;
    public static final int MAVLINK_MSG_LENGTH = 38;
    private static final long serialVersionUID = MAVLINK_MSG_ID_WATER_DEPTH;

    
    /**
     * Timestamp (time since system boot)
     */
    @Description("Timestamp (time since system boot)")
    @Units("ms")
    public long time_boot_ms;
    
    /**
     * Latitude
     */
    @Description("Latitude")
    @Units("degE7")
    public int lat;
    
    /**
     * Longitude
     */
    @Description("Longitude")
    @Units("degE7")
    public int lng;
    
    /**
     * Altitude (MSL) of vehicle
     */
    @Description("Altitude (MSL) of vehicle")
    @Units("m")
    public float alt;
    
    /**
     * Roll angle
     */
    @Description("Roll angle")
    @Units("rad")
    public float roll;
    
    /**
     * Pitch angle
     */
    @Description("Pitch angle")
    @Units("rad")
    public float pitch;
    
    /**
     * Yaw angle
     */
    @Description("Yaw angle")
    @Units("rad")
    public float yaw;
    
    /**
     * Distance (uncorrected)
     */
    @Description("Distance (uncorrected)")
    @Units("m")
    public float distance;
    
    /**
     * Water temperature
     */
    @Description("Water temperature")
    @Units("degC")
    public float temperature;
    
    /**
     * Onboard ID of the sensor
     */
    @Description("Onboard ID of the sensor")
    @Units("")
    public short id;
    
    /**
     * Sensor data healthy (0=unhealthy, 1=healthy)
     */
    @Description("Sensor data healthy (0=unhealthy, 1=healthy)")
    @Units("")
    public short healthy;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_WATER_DEPTH;

        packet.payload.putUnsignedInt(time_boot_ms);
        packet.payload.putInt(lat);
        packet.payload.putInt(lng);
        packet.payload.putFloat(alt);
        packet.payload.putFloat(roll);
        packet.payload.putFloat(pitch);
        packet.payload.putFloat(yaw);
        packet.payload.putFloat(distance);
        packet.payload.putFloat(temperature);
        packet.payload.putUnsignedByte(id);
        packet.payload.putUnsignedByte(healthy);
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a water_depth message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.time_boot_ms = payload.getUnsignedInt();
        this.lat = payload.getInt();
        this.lng = payload.getInt();
        this.alt = payload.getFloat();
        this.roll = payload.getFloat();
        this.pitch = payload.getFloat();
        this.yaw = payload.getFloat();
        this.distance = payload.getFloat();
        this.temperature = payload.getFloat();
        this.id = payload.getUnsignedByte();
        this.healthy = payload.getUnsignedByte();
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_water_depth() {
        this.msgid = MAVLINK_MSG_ID_WATER_DEPTH;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_water_depth( long time_boot_ms, int lat, int lng, float alt, float roll, float pitch, float yaw, float distance, float temperature, short id, short healthy) {
        this.msgid = MAVLINK_MSG_ID_WATER_DEPTH;

        this.time_boot_ms = time_boot_ms;
        this.lat = lat;
        this.lng = lng;
        this.alt = alt;
        this.roll = roll;
        this.pitch = pitch;
        this.yaw = yaw;
        this.distance = distance;
        this.temperature = temperature;
        this.id = id;
        this.healthy = healthy;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_water_depth( long time_boot_ms, int lat, int lng, float alt, float roll, float pitch, float yaw, float distance, float temperature, short id, short healthy, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_WATER_DEPTH;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.time_boot_ms = time_boot_ms;
        this.lat = lat;
        this.lng = lng;
        this.alt = alt;
        this.roll = roll;
        this.pitch = pitch;
        this.yaw = yaw;
        this.distance = distance;
        this.temperature = temperature;
        this.id = id;
        this.healthy = healthy;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_water_depth(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_WATER_DEPTH;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

                          
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_WATER_DEPTH - sysid:"+sysid+" compid:"+compid+" time_boot_ms:"+time_boot_ms+" lat:"+lat+" lng:"+lng+" alt:"+alt+" roll:"+roll+" pitch:"+pitch+" yaw:"+yaw+" distance:"+distance+" temperature:"+temperature+" id:"+id+" healthy:"+healthy+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_WATER_DEPTH";
    }
}
        