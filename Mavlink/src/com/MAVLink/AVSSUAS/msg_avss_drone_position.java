/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE AVSS_DRONE_POSITION PACKING
package com.MAVLink.AVSSUAS;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;
import com.MAVLink.Messages.Description;

/**
 *  Drone position.
 */
public class msg_avss_drone_position extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_AVSS_DRONE_POSITION = 60051;
    public static final int MAVLINK_MSG_LENGTH = 24;
    private static final long serialVersionUID = MAVLINK_MSG_ID_AVSS_DRONE_POSITION;

    
    /**
     * Timestamp (time since FC boot).
     */
    @Description("Timestamp (time since FC boot).")
    @Units("ms")
    public long time_boot_ms;
    
    /**
     * Latitude, expressed
     */
    @Description("Latitude, expressed")
    @Units("degE7")
    public int lat;
    
    /**
     * Longitude, expressed
     */
    @Description("Longitude, expressed")
    @Units("degE7")
    public int lon;
    
    /**
     * Altitude (MSL). Note that virtually all GPS modules provide both WGS84 and MSL.
     */
    @Description("Altitude (MSL). Note that virtually all GPS modules provide both WGS84 and MSL.")
    @Units("mm")
    public int alt;
    
    /**
     * Altitude above ground, This altitude is measured by a ultrasound, Laser rangefinder or millimeter-wave radar
     */
    @Description("Altitude above ground, This altitude is measured by a ultrasound, Laser rangefinder or millimeter-wave radar")
    @Units("m")
    public float ground_alt;
    
    /**
     * This altitude is measured by a barometer
     */
    @Description("This altitude is measured by a barometer")
    @Units("m")
    public float barometer_alt;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_AVSS_DRONE_POSITION;

        packet.payload.putUnsignedInt(time_boot_ms);
        packet.payload.putInt(lat);
        packet.payload.putInt(lon);
        packet.payload.putInt(alt);
        packet.payload.putFloat(ground_alt);
        packet.payload.putFloat(barometer_alt);
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a avss_drone_position message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.time_boot_ms = payload.getUnsignedInt();
        this.lat = payload.getInt();
        this.lon = payload.getInt();
        this.alt = payload.getInt();
        this.ground_alt = payload.getFloat();
        this.barometer_alt = payload.getFloat();
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_avss_drone_position() {
        this.msgid = MAVLINK_MSG_ID_AVSS_DRONE_POSITION;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_avss_drone_position( long time_boot_ms, int lat, int lon, int alt, float ground_alt, float barometer_alt) {
        this.msgid = MAVLINK_MSG_ID_AVSS_DRONE_POSITION;

        this.time_boot_ms = time_boot_ms;
        this.lat = lat;
        this.lon = lon;
        this.alt = alt;
        this.ground_alt = ground_alt;
        this.barometer_alt = barometer_alt;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_avss_drone_position( long time_boot_ms, int lat, int lon, int alt, float ground_alt, float barometer_alt, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_AVSS_DRONE_POSITION;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.time_boot_ms = time_boot_ms;
        this.lat = lat;
        this.lon = lon;
        this.alt = alt;
        this.ground_alt = ground_alt;
        this.barometer_alt = barometer_alt;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_avss_drone_position(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_AVSS_DRONE_POSITION;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

                
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_AVSS_DRONE_POSITION - sysid:"+sysid+" compid:"+compid+" time_boot_ms:"+time_boot_ms+" lat:"+lat+" lon:"+lon+" alt:"+alt+" ground_alt:"+ground_alt+" barometer_alt:"+barometer_alt+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_AVSS_DRONE_POSITION";
    }
}
        