/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE CAMERA_SETTINGS PACKING
package com.mavlink.common;
import com.mavlink.MAVLinkPacket;
import com.mavlink.messages.MAVLinkMessage;
import com.mavlink.messages.MAVLinkPayload;

import org.json.JSONException;
import org.json.JSONObject;

        
/**
 * Settings of a camera, can be requested using MAV_CMD_REQUEST_CAMERA_SETTINGS.
 */
public class msg_camera_settings extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_CAMERA_SETTINGS = 260;
    public static final int MAVLINK_MSG_LENGTH = 13;
    private static final long serialVersionUID = MAVLINK_MSG_ID_CAMERA_SETTINGS;

      
    /**
     * Timestamp (time since system boot).
     */
    public long time_boot_ms;
      
    /**
     * Camera mode
     */
    public short mode_id;
      
    /**
     * Current zoom level (0.0 to 100.0, NaN if not known)
     */
    public float zoomLevel;
      
    /**
     * Current focus level (0.0 to 100.0, NaN if not known)
     */
    public float focusLevel;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_CAMERA_SETTINGS;
        
        packet.payload.putUnsignedInt(time_boot_ms);
        packet.payload.putUnsignedByte(mode_id);
        
        if (isMavlink2) {
             packet.payload.putFloat(zoomLevel);
             packet.payload.putFloat(focusLevel);
            
        }
        return packet;
    }

    /**
     * Decode a camera_settings message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
        
        this.time_boot_ms = payload.getUnsignedInt();
        this.mode_id = payload.getUnsignedByte();
        
        if (isMavlink2) {
             this.zoomLevel = payload.getFloat();
             this.focusLevel = payload.getFloat();
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_camera_settings() {
        this.msgid = MAVLINK_MSG_ID_CAMERA_SETTINGS;
    }
    
    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_camera_settings( long time_boot_ms, short mode_id, float zoomLevel, float focusLevel) {
        this.msgid = MAVLINK_MSG_ID_CAMERA_SETTINGS;

        this.time_boot_ms = time_boot_ms;
        this.mode_id = mode_id;
        this.zoomLevel = zoomLevel;
        this.focusLevel = focusLevel;
        
    }
    
    /**
     * Constructor for a new message, initializes everything
     */
    public msg_camera_settings( long time_boot_ms, short mode_id, float zoomLevel, float focusLevel, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_CAMERA_SETTINGS;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.time_boot_ms = time_boot_ms;
        this.mode_id = mode_id;
        this.zoomLevel = zoomLevel;
        this.focusLevel = focusLevel;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_camera_settings(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_CAMERA_SETTINGS;
        
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from JSON Object
     */
    public msg_camera_settings(JSONObject jo) {
        this.msgid = MAVLINK_MSG_ID_CAMERA_SETTINGS;

        readJSONheader(jo);
        
        this.time_boot_ms = jo.optLong("time_boot_ms",0);
        this.mode_id = (short)jo.optInt("mode_id",0);
        
        this.zoomLevel = (float)jo.optDouble("zoomLevel",0);
        this.focusLevel = (float)jo.optDouble("focusLevel",0);
        
    }
    
    /**
     * Convert this class to a JSON Object
     */
    @Override
    public JSONObject toJSON() throws JSONException {
        final JSONObject jo = getJSONheader();
        
        jo.put("time_boot_ms", time_boot_ms);
        jo.put("mode_id", mode_id);
        
        jo.put("zoomLevel", (double)zoomLevel);
        jo.put("focusLevel", (double)focusLevel);
        
        return jo;
    }

            
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_CAMERA_SETTINGS - sysid:"+sysid+" compid:"+compid+" time_boot_ms:"+time_boot_ms+" mode_id:"+mode_id+" zoomLevel:"+zoomLevel+" focusLevel:"+focusLevel+"";
    }
    
    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_CAMERA_SETTINGS";
    }
}
        