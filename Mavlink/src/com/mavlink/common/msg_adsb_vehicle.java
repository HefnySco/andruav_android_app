/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE ADSB_VEHICLE PACKING
package com.mavlink.common;
import com.mavlink.MAVLinkPacket;
import com.mavlink.messages.MAVLinkMessage;
import com.mavlink.messages.MAVLinkPayload;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

        
/**
 * The location and information of an ADSB vehicle
 */
public class msg_adsb_vehicle extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_ADSB_VEHICLE = 246;
    public static final int MAVLINK_MSG_LENGTH = 38;
    private static final long serialVersionUID = MAVLINK_MSG_ID_ADSB_VEHICLE;

      
    /**
     * ICAO address
     */
    public long ICAO_address;
      
    /**
     * Latitude
     */
    public int lat;
      
    /**
     * Longitude
     */
    public int lon;
      
    /**
     * Altitude(ASL)
     */
    public int altitude;
      
    /**
     * Course over ground
     */
    public int heading;
      
    /**
     * The horizontal velocity
     */
    public int hor_velocity;
      
    /**
     * The vertical velocity. Positive is up
     */
    public short ver_velocity;
      
    /**
     * Bitmap to indicate various statuses including valid data fields
     */
    public int flags;
      
    /**
     * Squawk code
     */
    public int squawk;
      
    /**
     * ADSB altitude type.
     */
    public short altitude_type;
      
    /**
     * The callsign, 8+null
     */
    public byte[] callsign = new byte[9];
      
    /**
     * ADSB emitter type.
     */
    public short emitter_type;
      
    /**
     * Time since last communication in seconds
     */
    public short tslc;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_ADSB_VEHICLE;
        
        packet.payload.putUnsignedInt(ICAO_address);
        packet.payload.putInt(lat);
        packet.payload.putInt(lon);
        packet.payload.putInt(altitude);
        packet.payload.putUnsignedShort(heading);
        packet.payload.putUnsignedShort(hor_velocity);
        packet.payload.putShort(ver_velocity);
        packet.payload.putUnsignedShort(flags);
        packet.payload.putUnsignedShort(squawk);
        packet.payload.putUnsignedByte(altitude_type);
        
        for (int i = 0; i < callsign.length; i++) {
            packet.payload.putByte(callsign[i]);
        }
                    
        packet.payload.putUnsignedByte(emitter_type);
        packet.payload.putUnsignedByte(tslc);
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a adsb_vehicle message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
        
        this.ICAO_address = payload.getUnsignedInt();
        this.lat = payload.getInt();
        this.lon = payload.getInt();
        this.altitude = payload.getInt();
        this.heading = payload.getUnsignedShort();
        this.hor_velocity = payload.getUnsignedShort();
        this.ver_velocity = payload.getShort();
        this.flags = payload.getUnsignedShort();
        this.squawk = payload.getUnsignedShort();
        this.altitude_type = payload.getUnsignedByte();
         
        for (int i = 0; i < this.callsign.length; i++) {
            this.callsign[i] = payload.getByte();
        }
                
        this.emitter_type = payload.getUnsignedByte();
        this.tslc = payload.getUnsignedByte();
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_adsb_vehicle() {
        this.msgid = MAVLINK_MSG_ID_ADSB_VEHICLE;
    }
    
    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_adsb_vehicle( long ICAO_address, int lat, int lon, int altitude, int heading, int hor_velocity, short ver_velocity, int flags, int squawk, short altitude_type, byte[] callsign, short emitter_type, short tslc) {
        this.msgid = MAVLINK_MSG_ID_ADSB_VEHICLE;

        this.ICAO_address = ICAO_address;
        this.lat = lat;
        this.lon = lon;
        this.altitude = altitude;
        this.heading = heading;
        this.hor_velocity = hor_velocity;
        this.ver_velocity = ver_velocity;
        this.flags = flags;
        this.squawk = squawk;
        this.altitude_type = altitude_type;
        this.callsign = callsign;
        this.emitter_type = emitter_type;
        this.tslc = tslc;
        
    }
    
    /**
     * Constructor for a new message, initializes everything
     */
    public msg_adsb_vehicle( long ICAO_address, int lat, int lon, int altitude, int heading, int hor_velocity, short ver_velocity, int flags, int squawk, short altitude_type, byte[] callsign, short emitter_type, short tslc, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_ADSB_VEHICLE;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.ICAO_address = ICAO_address;
        this.lat = lat;
        this.lon = lon;
        this.altitude = altitude;
        this.heading = heading;
        this.hor_velocity = hor_velocity;
        this.ver_velocity = ver_velocity;
        this.flags = flags;
        this.squawk = squawk;
        this.altitude_type = altitude_type;
        this.callsign = callsign;
        this.emitter_type = emitter_type;
        this.tslc = tslc;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_adsb_vehicle(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_ADSB_VEHICLE;
        
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from JSON Object
     */
    public msg_adsb_vehicle(JSONObject jo) {
        this.msgid = MAVLINK_MSG_ID_ADSB_VEHICLE;

        readJSONheader(jo);
        
        this.ICAO_address = jo.optLong("ICAO_address",0);
        this.lat = jo.optInt("lat",0);
        this.lon = jo.optInt("lon",0);
        this.altitude = jo.optInt("altitude",0);
        this.heading = jo.optInt("heading",0);
        this.hor_velocity = jo.optInt("hor_velocity",0);
        this.ver_velocity = (short)jo.optInt("ver_velocity",0);
        this.flags = jo.optInt("flags",0);
        this.squawk = jo.optInt("squawk",0);
        this.altitude_type = (short)jo.optInt("altitude_type",0);
         
        if (jo.has("callsign")) {
            JSONArray ja_callsign = jo.optJSONArray("callsign");
            if (ja_callsign == null) {
                final String js_string_callsign = jo.optString("callsign");
                final byte[] b_callsign = js_string_callsign.getBytes();
                System.arraycopy(b_callsign, 0, this.callsign, 0, Math.min(this.callsign.length, b_callsign.length));
            } else {
                for (int i = 0; i < Math.min(this.callsign.length, ja_callsign.length()); i++) {
                    this.callsign[i] = (byte)ja_callsign.optInt(i,0);
                }
            }
        }
                    
        this.emitter_type = (short)jo.optInt("emitter_type",0);
        this.tslc = (short)jo.optInt("tslc",0);
        
        
    }
    
    /**
     * Convert this class to a JSON Object
     */
    @Override
    public JSONObject toJSON() throws JSONException {
        final JSONObject jo = getJSONheader();
        
        jo.put("ICAO_address", ICAO_address);
        jo.put("lat", lat);
        jo.put("lon", lon);
        jo.put("altitude", altitude);
        jo.put("heading", heading);
        jo.put("hor_velocity", hor_velocity);
        jo.put("ver_velocity", ver_velocity);
        jo.put("flags", flags);
        jo.put("squawk", squawk);
        jo.put("altitude_type", altitude_type);
         
        JSONArray ja_callsign = new JSONArray();
        for (int i = 0; i < this.callsign.length; i++) {
            ja_callsign.put(this.callsign[i]);
        }
        jo.putOpt("callsign", ja_callsign);
                
        jo.put("emitter_type", emitter_type);
        jo.put("tslc", tslc);
        
        
        return jo;
    }

                         
    /**
    * Sets the buffer of this message with a string, adds the necessary padding
    */
    public void setCallsign(String str) {
        int len = Math.min(str.length(), 9);
        for (int i=0; i<len; i++) {
            callsign[i] = (byte) str.charAt(i);
        }

        for (int i=len; i<9; i++) {            // padding for the rest of the buffer
            callsign[i] = 0;
        }
    }

    /**
    * Gets the message, formated as a string
    */
    public String getCallsign() {
        StringBuffer buf = new StringBuffer();
        for (int i = 0; i < 9; i++) {
            if (callsign[i] != 0)
                buf.append((char) callsign[i]);
            else
                break;
        }
        return buf.toString();

    }
                             
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_ADSB_VEHICLE - sysid:"+sysid+" compid:"+compid+" ICAO_address:"+ICAO_address+" lat:"+lat+" lon:"+lon+" altitude:"+altitude+" heading:"+heading+" hor_velocity:"+hor_velocity+" ver_velocity:"+ver_velocity+" flags:"+flags+" squawk:"+squawk+" altitude_type:"+altitude_type+" callsign:"+callsign+" emitter_type:"+emitter_type+" tslc:"+tslc+"";
    }
    
    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_ADSB_VEHICLE";
    }
}
        